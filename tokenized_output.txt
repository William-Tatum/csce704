--- Tokens for Snippet 1 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 clear_memory
2 (
1 char
2 *
5 buffer
2 ,
5 size_t
5 length
2 )
2 {
1 volatile
1 char
2 *
5 volatile_buffer
2 =
2 (
1 volatile
1 char
2 *
2 )
5 buffer
2 ;
1 for
2 (
5 size_t
5 i
2 =
3 0
2 ;
5 i
2 <
5 length
2 ;
5 i
2 +
2 +
2 )
2 {
5 volatile_buffer
2 [
5 i
2 ]
2 =
3 0
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 sensitive_data
2 [
3 100
2 ]
2 ;
4 strcpy
2 (
5 sensitive_data
2 ,
5 This
5 is
5 some
5 sensitive
5 data
2 )
2 ;
4 printf
2 (
5 Sensitive
5 data
2 %
5 s
5 n
2 ,
5 sensitive_data
2 )
2 ;
5 clear_memory
2 (
5 sensitive_data
2 ,
1 sizeof
2 (
5 sensitive_data
2 )
2 )
2 ;
2 /
2 /
5 Code
5 does
5 not
5 use
5 sensitive_data
5 anymore
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 2 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 vulnerableFunction
2 (
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
1 for
2 (
1 int
5 i
2 =
3 0
2 ;
5 i
2 <
2 =
3 10
2 ;
5 i
2 +
2 +
2 )
2 {
5 buffer
2 [
5 i
2 ]
2 =
5 input
2 [
5 i
2 ]
2 ;
2 }
4 printf
2 (
5 Buffer
5 content
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 userInput
2 [
3 15
2 ]
2 =
5 Hello
2 ,
5 World
2 !
2 ;
5 vulnerableFunction
2 (
5 userInput
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 3 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 copy_data
2 (
1 const
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 input
2 )
2 ;
4 printf
2 (
5 Buffer
5 contains
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 input_data
2 [
3 100
2 ]
2 ;
4 printf
2 (
5 Enter
5 some
5 data
2 )
2 ;
5 fgets
2 (
5 input_data
2 ,
1 sizeof
2 (
5 input_data
2 )
2 ,
5 stdin
2 )
2 ;
5 copy_data
2 (
5 input_data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 4 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 processInput
2 (
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 input
2 )
2 ;
4 printf
2 (
5 Processed
5 input
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 userInput
2 [
3 100
2 ]
2 ;
4 printf
2 (
5 Enter
5 some
5 text
2 )
2 ;
5 fgets
2 (
5 userInput
2 ,
1 sizeof
2 (
5 userInput
2 )
2 ,
5 stdin
2 )
2 ;
5 processInput
2 (
5 userInput
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 5 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 buffer
2 ;
5 buffer
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 buffer
2 =
2 =
5 NULL
2 )
2 {
1 return
3 1
2 ;
2 }
4 strcpy
2 (
5 buffer
2 ,
5 This
5 string
5 is
5 way
5 too
1 long
2 !
2 )
2 ;
4 printf
2 (
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
4 free
2 (
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 6 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 vulnerable_function
2 (
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 64
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 input
2 )
2 ;
2 }
1 int
5 main
2 (
1 int
5 argc
2 ,
1 char
2 *
5 argv
2 [
2 ]
2 )
2 {
1 if
2 (
5 argc
2 >
3 1
2 )
2 {
5 vulnerable_function
2 (
5 argv
2 [
3 1
2 ]
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Please
5 provide
5 an
5 input
5 string
2 .
5 n
2 )
2 ;
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 7 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 writeToBuffer
2 (
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
1 char
2 *
5 ptr
2 =
5 buffer
2 ;
5 ptr
2 -
2 -
2 ;
4 strcpy
2 (
5 ptr
2 ,
5 input
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 data
2 [
2 ]
2 =
5 HelloWorld
2 !
2 ;
5 writeToBuffer
2 (
5 data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 8 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 readBuffer
2 (
1 int
2 *
5 arr
2 ,
1 int
5 size
2 )
2 {
1 for
2 (
1 int
5 i
2 =
3 0
2 ;
5 i
2 <
2 =
5 size
2 ;
5 i
2 +
2 +
2 )
2 {
4 printf
2 (
2 %
5 d
5 n
2 ,
5 arr
2 [
5 i
2 ]
2 )
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 buffer
2 [
3 5
2 ]
2 =
2 {
3 1
2 ,
3 2
2 ,
3 3
2 ,
3 4
2 ,
3 5
2 }
2 ;
5 readBuffer
2 (
5 buffer
2 ,
3 5
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 9 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 printLine
2 (
1 const
1 char
2 *
5 str
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 str
2 )
2 ;
1 for
2 (
1 int
5 i
2 =
3 0
2 ;
5 i
2 <
2 =
3 10
2 ;
5 i
2 +
2 +
2 )
2 {
5 putchar
2 (
5 buffer
2 [
5 i
2 ]
2 )
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 const
1 char
2 *
5 inputString
2 =
5 HelloWorld
2 ;
5 printLine
2 (
5 inputString
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 10 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 buffer_underread
2 (
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
1 char
2 *
5 data
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 ABCDEFGHIJ
2 )
2 ;
5 data
2 =
5 buffer
2 -
3 1
2 ;
4 printf
2 (
5 Buffer
5 contents
2 %
5 c
5 n
2 ,
2 *
5 data
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 buffer_underread
2 (
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 11 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 limits
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 unsigned
1 int
5 value
2 =
5 UINT_MAX
2 ;
4 printf
2 (
5 Initial
5 value
2 %
5 u
5 n
2 ,
5 value
2 )
2 ;
5 value
2 +
2 +
2 ;
4 printf
2 (
5 Value
5 after
5 increment
2 %
5 u
5 n
2 ,
5 value
2 )
2 ;
2 /
2 /
5 Wrap
2 -
5 around
5 error
5 occurs
5 here
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 12 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 index
2 ;
1 int
5 data
2 [
3 10
2 ]
2 ;
4 printf
2 (
5 Enter
5 an
5 array
5 index
2 )
2 ;
5 scanf
2 (
2 %
5 d
2 ,
2 &
5 index
2 )
2 ;
5 data
2 [
5 index
2 ]
2 =
3 100
2 ;
4 printf
2 (
5 Data
5 at
5 index
2 %
5 d
5 is
2 %
5 d
5 n
2 ,
5 index
2 ,
5 data
2 [
5 index
2 ]
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 13 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 define
5 BUFFER_SIZE
3 256
1 void
5 process_message
2 (
1 const
1 char
2 *
5 msg
2 ,
5 size_t
5 len
2 )
2 {
1 char
5 buffer
2 [
5 BUFFER_SIZE
2 ]
2 ;
1 if
2 (
5 len
2 >
5 BUFFER_SIZE
2 )
2 {
4 printf
2 (
5 Error
5 Length
5 exceeds
5 buffer
5 size
2 .
5 n
2 )
2 ;
1 return
2 ;
2 }
4 memcpy
2 (
5 buffer
2 ,
5 msg
2 ,
5 len
2 )
2 ;
5 buffer
2 [
5 len
2 ]
2 =
3 0
2 ;
4 printf
2 (
5 Processed
5 message
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 input
2 [
2 ]
2 =
5 This
5 is
5 a
5 test
5 message
2 .
5 It
5 is
5 longer
5 than
5 expected
2 .
2 ;
5 size_t
5 input_len
2 =
4 strlen
2 (
5 input
2 )
2 ;
2 /
2 /
5 Actual
5 length
5 size_t
5 specified_len
2 =
3 60
2 ;
2 /
2 /
5 Incorrectly
5 specified
5 length
5 process_message
2 (
5 input
2 ,
5 specified_len
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 14 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 vulnerableFunction
2 (
1 const
1 char
2 *
5 input
2 )
2 {
1 int
5 length
2 =
4 strlen
2 (
5 input
2 )
2 ;
1 char
2 *
5 buffer
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
5 length
2 )
2 ;
2 /
2 /
5 Incorrect
5 calculation
5 does
5 not
5 allocate
5 space
1 for
5 null
5 terminator
1 if
2 (
5 buffer
2 =
2 =
5 NULL
2 )
2 {
5 fprintf
2 (
5 stderr
2 ,
5 Memory
5 allocation
5 failed
5 n
2 )
2 ;
5 exit
2 (
3 1
2 )
2 ;
2 }
4 strcpy
2 (
5 buffer
2 ,
5 input
2 )
2 ;
2 /
2 /
5 Potential
5 buffer
5 overflow
4 printf
2 (
5 Buffer
5 contents
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
4 free
2 (
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 userInput
2 [
3 100
2 ]
2 ;
4 printf
2 (
5 Enter
5 some
5 text
2 )
2 ;
5 fgets
2 (
5 userInput
2 ,
1 sizeof
2 (
5 userInput
2 )
2 ,
5 stdin
2 )
2 ;
5 strtok
2 (
5 userInput
2 ,
5 n
2 )
2 ;
2 /
2 /
5 Remove
5 newline
5 character
5 vulnerableFunction
2 (
5 userInput
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 15 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 print_input
2 (
1 char
2 *
5 user_input
2 )
2 {
4 printf
2 (
5 user_input
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 user_input
2 [
3 256
2 ]
2 ;
5 fgets
2 (
5 user_input
2 ,
1 sizeof
2 (
5 user_input
2 )
2 ,
5 stdin
2 )
2 ;
5 print_input
2 (
5 user_input
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 16 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
5 include
2 <
5 wchar
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 multi_byte_str
2 [
2 ]
2 =
2 ;
2 /
2 /
5 Hello
5 in
5 Japanese
5 wchar_t
5 wide_char_str
2 [
2 ]
2 =
5 L
2 ;
1 int
5 len_incorrect
2 =
4 strlen
2 (
2 (
1 char
2 *
2 )
5 wide_char_str
2 )
2 ;
4 printf
2 (
5 Incorrect
5 Length
5 Calculation
2 %
5 d
5 n
2 ,
5 len_incorrect
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 17 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 source
2 [
2 ]
2 =
5 This
5 is
5 a
1 long
5 string
2 ;
1 char
5 destination
2 [
3 10
2 ]
2 ;
5 strncpy
2 (
5 destination
2 ,
5 source
2 ,
1 sizeof
2 (
5 destination
2 )
2 )
2 ;
4 printf
2 (
5 Destination
2 %
5 s
5 n
2 ,
5 destination
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 18 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 struct
5 PacketV1
2 {
1 int
5 header
2 ;
1 char
5 data
2 [
3 8
2 ]
2 ;
2 }
2 ;
1 struct
5 PacketV2
2 {
1 int
5 header
2 ;
1 int
5 padding
2 ;
1 char
5 data
2 [
3 8
2 ]
2 ;
2 }
2 ;
1 void
5 processPacket
2 (
1 char
2 *
5 packet
2 ,
1 int
5 version
2 )
2 {
1 if
2 (
5 version
2 =
2 =
3 1
2 )
2 {
1 struct
5 PacketV1
2 *
5 pktV1
2 =
2 (
1 struct
5 PacketV1
2 *
2 )
5 packet
2 ;
4 printf
2 (
5 Processing
5 V1
2 %
5 s
5 n
2 ,
5 pktV1
2 -
2 >
5 data
2 )
2 ;
2 }
1 else
1 if
2 (
5 version
2 =
2 =
3 2
2 )
2 {
1 struct
5 PacketV2
2 *
5 pktV2
2 =
2 (
1 struct
5 PacketV2
2 *
2 )
5 packet
2 ;
4 printf
2 (
5 Processing
5 V2
2 %
5 s
5 n
2 ,
5 pktV2
2 -
2 >
5 data
2 )
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 buffer
2 [
3 20
2 ]
2 ;
4 memcpy
2 (
5 buffer
2 ,
5 x01
5 x00
5 x00
5 x00HelloV1
2 ,
3 12
2 )
2 ;
5 processPacket
2 (
5 buffer
2 ,
3 1
2 )
2 ;
4 memcpy
2 (
5 buffer
2 ,
5 x02
5 x00
5 x00
5 x00
5 x00
5 x00
5 x00
5 x00HelloV2
2 ,
3 16
2 )
2 ;
5 processPacket
2 (
5 buffer
2 ,
3 2
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 19 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 limits
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 a
2 =
5 INT_MIN
2 ;
1 int
5 b
2 =
3 1
2 ;
1 int
5 result
2 =
5 a
2 -
5 b
2 ;
4 printf
2 (
5 Result
2 %
5 d
5 n
2 ,
5 result
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 20 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 unsigned
1 int
5 largeNumber
2 =
3 3000000000
2 ;
1 int
5 coercedNumber
2 =
5 largeNumber
2 ;
4 printf
2 (
5 Original
1 unsigned
5 number
2 %
5 u
5 n
2 ,
5 largeNumber
2 )
2 ;
4 printf
2 (
5 Coerced
1 signed
5 number
2 %
5 d
5 n
2 ,
5 coercedNumber
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 21 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 processNumber
2 (
1 unsigned
1 short
5 num
2 )
2 {
1 int
5 extendedNum
2 ;
5 extendedNum
2 =
5 num
2 ;
4 printf
2 (
5 Processed
5 number
2 %
5 d
5 n
2 ,
5 extendedNum
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 unsigned
1 short
5 num
2 ;
4 printf
2 (
5 Enter
5 a
5 number
2 )
2 ;
5 scanf
2 (
2 %
5 hd
2 ,
2 &
5 num
2 )
2 ;
5 processNumber
2 (
5 num
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 22 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 getValue
2 (
2 )
2 {
1 return
2 -
3 5
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 signedValue
2 =
5 getValue
2 (
2 )
2 ;
5 size_t
5 size
2 =
2 (
5 size_t
2 )
5 signedValue
2 ;
1 char
2 *
5 buffer
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
5 size
2 )
2 ;
1 if
2 (
5 buffer
2 =
2 =
5 NULL
2 )
2 {
4 printf
2 (
5 Memory
5 allocation
5 failed
5 n
2 )
2 ;
1 return
3 1
2 ;
2 }
4 strcpy
2 (
5 buffer
2 ,
5 Hello
2 ,
5 World
2 !
2 )
2 ;
4 printf
2 (
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
4 free
2 (
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 23 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 process_buffer
2 (
1 char
2 *
5 buffer
2 ,
1 unsigned
1 int
5 index
2 )
2 {
1 int
5 signed_index
2 =
2 (
1 int
2 )
5 index
2 ;
5 buffer
2 [
5 signed_index
2 ]
2 =
5 X
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
5 memset
2 (
5 buffer
2 ,
5 A
2 ,
1 sizeof
2 (
5 buffer
2 )
2 )
2 ;
1 unsigned
1 int
5 large_index
2 =
2 ;
5 process_buffer
2 (
5 buffer
2 ,
5 large_index
2 )
2 ;
4 printf
2 (
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 24 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 largeValue
2 =
3 300
2 ;
1 char
5 truncatedValue
2 =
2 (
1 char
2 )
5 largeValue
2 ;
4 printf
2 (
5 Original
5 value
2 %
5 d
5 n
2 ,
5 largeValue
2 )
2 ;
4 printf
2 (
5 Truncated
5 value
2 %
5 d
5 n
2 ,
5 truncatedValue
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 25 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 buffer
2 [
3 50
2 ]
2 ;
5 gets
2 (
5 buffer
2 )
2 ;
4 printf
2 (
5 Input
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 26 ---
5 include
2 <
5 unistd
2 .
5 h
2 >
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 if
2 (
5 chroot
2 (
2 /
5 var
2 /
5 jail
2 )
2 !
2 =
3 0
2 )
2 {
5 perror
2 (
5 chroot
5 failed
2 )
2 ;
5 exit
2 (
5 EXIT_FAILURE
2 )
2 ;
2 }
2 /
2 /
5 Code
5 inside
5 the
5 chroot
5 jail
5 system
2 (
2 /
5 bin
2 /
5 sh
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 27 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 sensitive_data
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 100
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 sensitive_data
2 =
2 =
5 NULL
2 )
2 {
1 return
2 -
3 1
2 ;
2 }
4 strcpy
2 (
5 sensitive_data
2 ,
5 VerySecretPassword123
2 )
2 ;
4 printf
2 (
5 Sensitive
5 data
2 %
5 s
5 n
2 ,
5 sensitive_data
2 )
2 ;
5 sensitive_data
2 =
2 (
1 char
2 *
2 )
5 realloc
2 (
5 sensitive_data
2 ,
3 200
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 sensitive_data
2 =
2 =
5 NULL
2 )
2 {
1 return
2 -
3 1
2 ;
2 }
2 /
2 /
5 Continue
5 using
5 sensitive_data
5 but
5 old
5 data
5 may
5 remain
5 in
5 memory
4 free
2 (
5 sensitive_data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 28 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 pthread
2 .
5 h
2 >
1 int
5 shared_resource
2 =
3 0
2 ;
1 void
2 *
5 increment_resource
2 (
1 void
2 *
5 arg
2 )
2 {
1 int
5 temp
2 =
5 shared_resource
2 ;
5 temp
2 =
5 temp
2 +
3 1
2 ;
5 shared_resource
2 =
5 temp
2 ;
1 return
5 NULL
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 pthread_t
5 thread1
2 ,
5 thread2
2 ;
5 pthread_create
2 (
2 &
5 thread1
2 ,
5 NULL
2 ,
5 increment_resource
2 ,
5 NULL
2 )
2 ;
5 pthread_create
2 (
2 &
5 thread2
2 ,
5 NULL
2 ,
5 increment_resource
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread1
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread2
2 ,
5 NULL
2 )
2 ;
4 printf
2 (
5 Shared
5 Resource
5 Value
2 %
5 d
5 n
2 ,
5 shared_resource
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 29 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 signal
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
1 volatile
1 int
5 shared_var
2 =
3 0
2 ;
1 void
5 handler
2 (
1 int
5 sig
2 )
2 {
1 if
2 (
5 shared_var
2 =
2 =
3 1
2 )
2 {
2 /
2 /
5 Potential
5 race
5 condition
5 with
5 shared_var
4 free
2 (
4 malloc
2 (
3 128
2 )
2 )
2 ;
2 /
2 /
5 Non
2 -
5 reentrant
5 functions
5 in
5 a
5 signal
5 handler
5 shared_var
2 =
3 0
2 ;
2 /
2 /
5 Modify
5 shared
5 state
2 }
2 }
1 int
5 main
2 (
2 )
2 {
5 signal
2 (
5 SIGINT
2 ,
5 handler
2 )
2 ;
5 signal
2 (
5 SIGTERM
2 ,
5 handler
2 )
2 ;
1 while
2 (
3 1
2 )
2 {
5 shared_var
2 =
3 1
2 ;
5 sleep
2 (
3 1
2 )
2 ;
2 /
2 /
5 Simulate
5 work
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 30 ---
5 include
2 <
5 pthread
2 .
5 h
2 >
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
1 int
5 shared_resource
2 =
3 0
2 ;
1 void
2 *
5 thread_function
2 (
1 void
2 *
5 arg
2 )
2 {
1 int
5 local_copy
2 =
5 shared_resource
2 ;
5 usleep
2 (
3 1
2 )
2 ;
5 local_copy
2 +
2 +
2 ;
5 shared_resource
2 =
5 local_copy
2 ;
1 return
5 NULL
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 pthread_t
5 thread1
2 ,
5 thread2
2 ;
5 pthread_create
2 (
2 &
5 thread1
2 ,
5 NULL
2 ,
5 thread_function
2 ,
5 NULL
2 )
2 ;
5 pthread_create
2 (
2 &
5 thread2
2 ,
5 NULL
2 ,
5 thread_function
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread1
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread2
2 ,
5 NULL
2 )
2 ;
4 printf
2 (
5 Final
5 value
5 of
5 shared_resource
2 %
5 d
5 n
2 ,
5 shared_resource
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 31 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 untrustedFunction
2 (
1 char
2 *
5 data
2 )
2 {
4 strcpy
2 (
5 data
2 ,
5 Modified
5 by
5 untrusted
5 function
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 mutableData
2 [
3 50
2 ]
2 =
5 Original
5 data
2 ;
4 printf
2 (
5 Before
2 %
5 s
5 n
2 ,
5 mutableData
2 )
2 ;
5 untrustedFunction
2 (
5 mutableData
2 )
2 ;
4 printf
2 (
5 After
2 %
5 s
5 n
2 ,
5 mutableData
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 32 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 char
2 *
5 getSecretData
2 (
2 )
2 {
1 static
1 char
5 secretData
2 [
3 100
2 ]
2 ;
4 strcpy
2 (
5 secretData
2 ,
5 Sensitive
5 Information
2 )
2 ;
1 return
5 secretData
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 data
2 =
5 getSecretData
2 (
2 )
2 ;
4 printf
2 (
5 Before
5 modification
2 %
5 s
5 n
2 ,
5 data
2 )
2 ;
4 strcpy
2 (
5 data
2 ,
5 Tampered
5 Information
2 )
2 ;
4 printf
2 (
5 After
5 modification
2 %
5 s
5 n
2 ,
5 getSecretData
2 (
2 )
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 33 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 handle_data
2 (
1 const
1 char
2 *
5 input
2 )
2 {
1 char
2 *
5 data
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 100
2 )
2 ;
1 if
2 (
5 data
2 =
2 =
5 NULL
2 )
2 {
1 return
2 ;
2 }
4 strcpy
2 (
5 data
2 ,
5 input
2 )
2 ;
4 printf
2 (
5 Data
2 %
5 s
5 n
2 ,
5 data
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 handle_data
2 (
5 Example
5 data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 34 ---
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 ptr
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 ptr
2 =
2 =
5 NULL
2 )
2 {
1 return
3 1
2 ;
2 }
4 free
2 (
5 ptr
2 )
2 ;
4 free
2 (
5 ptr
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 35 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 data
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 data
2 =
2 =
5 NULL
2 )
2 {
1 return
2 -
3 1
2 ;
2 }
4 strcpy
2 (
5 data
2 ,
5 Hello
2 )
2 ;
4 free
2 (
5 data
2 )
2 ;
1 char
2 *
5 newData
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 if
2 (
5 newData
2 =
2 =
5 NULL
2 )
2 {
1 return
2 -
3 1
2 ;
2 }
4 strcpy
2 (
5 newData
2 ,
5 World
2 )
2 ;
4 printf
2 (
2 %
5 s
5 n
2 ,
5 data
2 )
2 ;
4 free
2 (
5 newData
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 36 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 printValue
2 (
2 )
2 {
1 int
5 x
2 ;
4 printf
2 (
5 Value
5 of
5 x
2 %
5 d
5 n
2 ,
5 x
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 printValue
2 (
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 37 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 setjmp
2 .
5 h
2 >
5 jmp_buf
5 env
2 ;
1 void
5 cleanup_resources
2 (
1 char
2 *
5 buffer
2 ,
5 FILE
2 *
5 file
2 )
2 {
1 if
2 (
5 buffer
2 )
2 {
4 free
2 (
5 buffer
2 )
2 ;
2 }
1 if
2 (
5 file
2 )
2 {
5 fclose
2 (
5 file
2 )
2 ;
2 }
2 }
1 void
5 process_file
2 (
1 const
1 char
2 *
5 filename
2 )
2 {
1 char
2 *
5 buffer
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 1024
2 )
2 ;
5 FILE
2 *
5 file
2 =
5 fopen
2 (
5 filename
2 ,
5 r
2 )
2 ;
1 if
2 (
2 !
5 buffer
2 |
2 |
2 !
5 file
2 )
2 {
5 longjmp
2 (
5 env
2 ,
3 1
2 )
2 ;
2 }
2 /
2 /
2 .
2 .
2 .
5 perform
5 operations
5 that
5 might
5 throw
2 .
2 .
2 .
5 cleanup_resources
2 (
5 buffer
2 ,
5 file
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 if
2 (
5 setjmp
2 (
5 env
2 )
2 !
2 =
3 0
2 )
2 {
4 printf
2 (
5 Exception
5 caught
2 ,
5 resources
5 not
5 cleaned
5 properly
5 n
2 )
2 ;
1 return
3 1
2 ;
2 }
5 process_file
2 (
5 example
2 .
5 txt
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 38 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 typedef
1 struct
2 {
1 char
5 key
2 [
3 20
2 ]
2 ;
1 int
5 value
2 ;
2 }
5 AssocList
2 ;
1 int
5 main
2 (
2 )
2 {
5 AssocList
5 alist
2 [
3 3
2 ]
2 =
2 {
2 {
5 key1
2 ,
3 10
2 }
2 ,
2 {
5 key2
2 ,
3 20
2 }
2 ,
2 {
5 key1
2 ,
3 30
2 }
2 }
2 ;
1 const
1 char
2 *
5 search_key
2 =
5 key1
2 ;
1 for
2 (
1 int
5 i
2 =
3 0
2 ;
5 i
2 <
3 3
2 ;
5 i
2 +
2 +
2 )
2 {
1 if
2 (
4 strcmp
2 (
5 alist
2 [
5 i
2 ]
2 .
5 key
2 ,
5 search_key
2 )
2 =
2 =
3 0
2 )
2 {
4 printf
2 (
5 Found
5 key
2 %
5 s
2 ,
5 Value
2 %
5 d
5 n
2 ,
5 alist
2 [
5 i
2 ]
2 .
5 key
2 ,
5 alist
2 [
5 i
2 ]
2 .
5 value
2 )
2 ;
2 }
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 39 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 typedef
1 struct
5 Node
2 {
1 int
5 data
2 ;
1 struct
5 Node
2 *
5 next
2 ;
2 }
5 Node
2 ;
5 Node
2 *
5 createListWithSentinel
2 (
2 )
2 {
5 Node
2 *
5 sentinel
2 =
2 (
5 Node
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
5 Node
2 )
2 )
2 ;
1 if
2 (
5 sentinel
2 =
2 =
5 NULL
2 )
2 {
5 exit
2 (
3 1
2 )
2 ;
2 }
5 sentinel
2 -
2 >
5 next
2 =
5 NULL
2 ;
1 return
5 sentinel
2 ;
2 }
1 void
5 appendNode
2 (
5 Node
2 *
5 sentinel
2 ,
1 int
5 value
2 )
2 {
5 Node
2 *
5 newNode
2 =
2 (
5 Node
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
5 Node
2 )
2 )
2 ;
1 if
2 (
5 newNode
2 =
2 =
5 NULL
2 )
2 {
5 exit
2 (
3 1
2 )
2 ;
2 }
5 newNode
2 -
2 >
5 data
2 =
5 value
2 ;
5 newNode
2 -
2 >
5 next
2 =
5 sentinel
2 -
2 >
5 next
2 ;
5 sentinel
2 -
2 >
5 next
2 =
5 newNode
2 ;
2 }
1 void
5 printList
2 (
5 Node
2 *
5 sentinel
2 )
2 {
5 Node
2 *
5 current
2 =
5 sentinel
2 -
2 >
5 next
2 ;
1 while
2 (
5 current
2 !
2 =
5 NULL
2 )
2 {
4 printf
2 (
2 %
5 d
2 -
2 >
2 ,
5 current
2 -
2 >
5 data
2 )
2 ;
5 current
2 =
5 current
2 -
2 >
5 next
2 ;
2 }
4 printf
2 (
5 NULL
5 n
2 )
2 ;
2 }
1 void
5 deleteNode
2 (
5 Node
2 *
5 sentinel
2 ,
1 int
5 value
2 )
2 {
5 Node
2 *
5 current
2 =
5 sentinel
2 ;
1 while
2 (
5 current
2 -
2 >
5 next
2 !
2 =
5 NULL
2 )
2 {
1 if
2 (
5 current
2 -
2 >
5 next
2 -
2 >
5 data
2 =
2 =
5 value
2 )
2 {
5 Node
2 *
5 temp
2 =
5 current
2 -
2 >
5 next
2 ;
5 current
2 -
2 >
5 next
2 =
5 temp
2 -
2 >
5 next
2 ;
4 free
2 (
5 temp
2 )
2 ;
1 break
2 ;
2 }
5 current
2 =
5 current
2 -
2 >
5 next
2 ;
2 }
2 }
1 void
5 unsafeDeleteSentinel
2 (
5 Node
2 *
5 sentinel
2 )
2 {
1 if
2 (
5 sentinel
2 !
2 =
5 NULL
2 )
2 {
4 free
2 (
5 sentinel
2 )
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
5 Node
2 *
5 sentinel
2 =
5 createListWithSentinel
2 (
2 )
2 ;
5 appendNode
2 (
5 sentinel
2 ,
3 1
2 )
2 ;
5 appendNode
2 (
5 sentinel
2 ,
3 2
2 )
2 ;
5 appendNode
2 (
5 sentinel
2 ,
3 3
2 )
2 ;
5 printList
2 (
5 sentinel
2 )
2 ;
5 deleteNode
2 (
5 sentinel
2 ,
3 2
2 )
2 ;
5 printList
2 (
5 sentinel
2 )
2 ;
5 unsafeDeleteSentinel
2 (
5 sentinel
2 )
2 ;
5 printList
2 (
5 sentinel
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 40 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 processString
2 (
1 char
2 *
5 input
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 input
2 )
2 ;
4 printf
2 (
5 Processed
5 string
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 user_input
2 [
3 11
2 ]
2 ;
2 /
2 /
5 user
5 inputs
5 a
5 string
2 ,
5 including
5 the
5 null
5 byte
4 printf
2 (
5 Enter
5 a
5 string
2 (
5 max
3 10
5 characters
2 )
2 )
2 ;
5 fgets
2 (
5 user_input
2 ,
1 sizeof
2 (
5 user_input
2 )
2 ,
5 stdin
2 )
2 ;
5 user_input
2 [
5 strcspn
2 (
5 user_input
2 ,
5 n
2 )
2 ]
2 =
3 0
2 ;
2 /
2 /
5 Remove
5 newline
5 character
5 processString
2 (
5 user_input
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 41 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 char
2 *
5 get_string
2 (
1 char
2 *
5 strings
2 [
2 ]
2 ,
1 int
5 index
2 ,
1 int
5 size
2 )
2 {
1 if
2 (
5 index
2 >
2 =
5 size
2 )
2 {
1 return
5 strings
2 [
5 size
2 -
3 1
2 ]
2 +
3 5
2 ;
2 /
2 /
5 Returns
5 a
5 pointer
5 outside
5 the
5 expected
5 range
2 }
1 return
5 strings
2 [
5 index
2 ]
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 strings
2 [
2 ]
2 =
2 {
5 Hello
2 ,
5 World
2 ,
5 Example
2 }
2 ;
1 int
5 size
2 =
1 sizeof
2 (
5 strings
2 )
2 /
1 sizeof
2 (
5 strings
2 [
3 0
2 ]
2 )
2 ;
1 char
2 *
5 result
2 =
5 get_string
2 (
5 strings
2 ,
3 3
2 ,
5 size
2 )
2 ;
2 /
2 /
5 Index
5 is
5 out
5 of
5 range
4 printf
2 (
2 %
5 s
5 n
2 ,
5 result
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 42 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 buffer
2 =
4 malloc
2 (
3 64
2 )
2 ;
1 if
2 (
5 buffer
2 =
2 =
5 NULL
2 )
2 {
5 perror
2 (
5 Failed
5 to
5 allocate
5 memory
2 )
2 ;
1 return
3 1
2 ;
2 }
4 strcpy
2 (
5 buffer
2 ,
5 This
5 is
5 a
5 test
5 string
2 .
2 )
2 ;
4 printf
2 (
5 Buffer
5 size
2 %
5 zu
5 n
2 ,
1 sizeof
2 (
5 buffer
2 )
2 )
2 ;
4 free
2 (
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 43 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 array
2 [
3 10
2 ]
2 ;
1 int
2 *
5 ptr
2 =
5 array
2 ;
1 int
5 index
2 =
3 5
2 ;
1 int
5 incorrectValue
2 =
2 *
2 (
5 ptr
2 +
5 index
2 *
1 sizeof
2 (
1 int
2 )
2 )
2 ;
4 printf
2 (
5 Incorrect
5 value
2 %
5 d
5 n
2 ,
5 incorrectValue
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 44 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 firstChunk
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
1 char
2 *
5 secondChunk
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 10
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
4 strcpy
2 (
5 firstChunk
2 ,
5 Hello
2 )
2 ;
4 strcpy
2 (
5 secondChunk
2 ,
5 World
2 )
2 ;
5 ptrdiff_t
5 incorrectSize
2 =
5 secondChunk
2 -
5 firstChunk
2 ;
4 printf
2 (
5 Incorrect
5 size
2 %
5 td
5 n
2 ,
5 incorrectSize
2 )
2 ;
4 free
2 (
5 firstChunk
2 )
2 ;
4 free
2 (
5 secondChunk
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 45 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 source
2 [
2 ]
2 =
5 This
5 is
5 a
5 test
5 string
2 .
2 ;
1 char
5 dest
2 [
3 20
2 ]
2 ;
5 strncpy
2 (
5 dest
2 ,
5 source
2 ,
4 strlen
2 (
5 source
2 )
2 +
3 1
2 )
2 ;
4 printf
2 (
5 Destination
2 %
5 s
5 n
2 ,
5 dest
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 46 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 printMessage
2 (
1 char
2 *
5 message
2 )
2 {
4 printf
2 (
2 %
5 s
5 n
2 ,
5 message
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 msg
2 =
5 NULL
2 ;
5 printMessage
2 (
5 msg
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 47 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 processInput
2 (
1 int
5 input
2 )
2 {
1 switch
2 (
5 input
2 )
2 {
1 case
3 1
4 printf
2 (
5 Option
3 1
5 selected
2 .
5 n
2 )
2 ;
1 break
2 ;
1 case
3 2
4 printf
2 (
5 Option
3 2
5 selected
2 .
5 n
2 )
2 ;
1 break
2 ;
1 case
3 3
4 printf
2 (
5 Option
3 3
5 selected
2 .
5 n
2 )
2 ;
1 break
2 ;
2 /
2 /
5 Missing
1 default
1 case
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 input
2 ;
4 printf
2 (
5 Enter
5 a
5 number
2 )
2 ;
5 scanf
2 (
2 %
5 d
2 ,
2 &
5 input
2 )
2 ;
5 processInput
2 (
5 input
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 48 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 signal
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
5 include
2 <
5 syslog
2 .
5 h
2 >
1 void
5 signal_handler
2 (
1 int
5 signal
2 )
2 {
5 syslog
2 (
5 LOG_INFO
2 ,
5 Signal
5 received
2 %
5 d
2 ,
5 signal
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 signal
2 (
5 SIGINT
2 ,
5 signal_handler
2 )
2 ;
5 openlog
2 (
5 CWE
2 -
3 479
2 ,
5 LOG_PID
2 |
5 LOG_CONS
2 ,
5 LOG_USER
2 )
2 ;
1 while
2 (
3 1
2 )
2 {
5 pause
2 (
2 )
2 ;
2 }
5 closelog
2 (
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 49 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 validUser
2 =
3 0
2 ;
2 /
2 /
3 0
5 means
5 false
2 ,
3 1
5 means
5 true
2 /
2 /
5 Incorrect
5 operator
5 used
2 =
2 =
5 intended
5 instead
5 of
2 =
1 if
2 (
5 validUser
2 =
3 1
2 )
2 {
4 printf
2 (
5 Access
5 granted
2 .
5 n
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Access
5 denied
2 .
5 n
2 )
2 ;
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 50 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 x
2 =
3 5
2 ;
1 int
5 y
2 =
3 10
2 ;
1 if
2 (
5 x
2 =
5 y
2 )
2 {
4 printf
2 (
5 This
5 will
5 always
5 print
5 because
5 of
5 assignment
2 .
5 n
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 This
5 will
5 never
5 print
2 .
5 n
2 )
2 ;
2 }
4 printf
2 (
5 Value
5 of
5 x
5 is
2 %
5 d
5 n
2 ,
5 x
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 51 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 a
2 =
3 5
2 ;
1 int
5 b
2 =
3 10
2 ;
1 if
2 (
5 a
2 =
2 =
5 b
2 )
2 {
4 printf
2 (
5 a
5 is
5 equal
5 to
5 b
5 n
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 a
5 is
5 not
5 equal
5 to
5 b
5 n
2 )
2 ;
2 }
5 a
2 =
2 =
5 b
2 ;
4 printf
2 (
5 a
2 %
5 d
2 ,
5 b
2 %
5 d
5 n
2 ,
5 a
2 ,
5 b
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 52 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 checkValue
2 (
1 int
5 x
2 )
2 {
1 if
2 (
5 x
2 >
3 0
2 )
4 printf
2 (
5 The
5 value
5 is
5 positive
2 .
5 n
2 )
2 ;
4 printf
2 (
5 This
5 message
5 should
5 only
5 appear
1 if
5 the
5 number
5 is
5 positive
2 .
5 n
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 checkValue
2 (
3 5
2 )
2 ;
5 checkValue
2 (
2 -
3 3
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 53 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 checkLevel
2 (
1 int
5 level
2 )
2 {
1 switch
2 (
5 level
2 )
2 {
1 case
3 1
4 printf
2 (
5 Level
3 1
5 Basic
5 access
5 granted
2 .
5 n
2 )
2 ;
1 case
3 2
4 printf
2 (
5 Level
3 2
5 Intermediate
5 access
5 granted
2 .
5 n
2 )
2 ;
1 case
3 3
4 printf
2 (
5 Level
3 3
5 Full
5 access
5 granted
2 .
5 n
2 )
2 ;
1 break
2 ;
1 default
4 printf
2 (
5 Invalid
5 level
2 .
5 n
2 )
2 ;
1 break
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 level
2 =
3 2
2 ;
5 checkLevel
2 (
5 level
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 54 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 typedef
1 struct
2 {
1 int
5 id
2 ;
1 char
5 name
2 [
3 50
2 ]
2 ;
2 }
5 PrivateData
2 ;
5 PrivateData
5 privateData
2 =
2 {
3 42
2 ,
5 SensitiveName
2 }
2 ;
5 PrivateData
2 *
5 getPrivateData
2 (
2 )
2 {
1 return
2 &
5 privateData
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 PrivateData
2 *
5 data
2 =
5 getPrivateData
2 (
2 )
2 ;
4 printf
2 (
5 ID
2 %
5 d
2 ,
5 Name
2 %
5 s
5 n
2 ,
5 data
2 -
2 >
5 id
2 ,
5 data
2 -
2 >
5 name
2 )
2 ;
4 strcpy
2 (
5 data
2 -
2 >
5 name
2 ,
5 ModifiedName
2 )
2 ;
4 printf
2 (
5 Modified
5 Name
2 %
5 s
5 n
2 ,
5 privateData
2 .
5 name
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 55 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 typedef
1 struct
2 {
1 char
5 privateArray
2 [
3 50
2 ]
2 ;
2 }
5 DataHolder
2 ;
5 DataHolder
5 holder
2 ;
1 void
5 setData
2 (
1 char
2 *
5 publicData
2 )
2 {
4 strcpy
2 (
5 holder
2 .
5 privateArray
2 ,
5 publicData
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 publicInput
2 [
2 ]
2 =
5 ThisIsPublicData
2 ;
5 setData
2 (
5 publicInput
2 )
2 ;
4 printf
2 (
5 Data
5 inside
5 private
5 array
2 %
5 s
5 n
2 ,
5 holder
2 .
5 privateArray
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 56 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
5 include
2 <
5 pthread
2 .
5 h
2 >
1 void
2 *
5 print_username
2 (
1 void
2 *
5 arg
2 )
2 {
1 char
2 *
5 user
2 ;
5 user
2 =
5 getlogin
2 (
2 )
2 ;
1 if
2 (
5 user
2 !
2 =
5 NULL
2 )
2 {
4 printf
2 (
5 User
2 %
5 s
5 n
2 ,
5 user
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Failed
5 to
5 get
5 user
5 login
5 name
2 .
5 n
2 )
2 ;
2 }
1 return
5 NULL
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 pthread_t
5 thread1
2 ,
5 thread2
2 ;
5 pthread_create
2 (
2 &
5 thread1
2 ,
5 NULL
2 ,
5 print_username
2 ,
5 NULL
2 )
2 ;
5 pthread_create
2 (
2 &
5 thread2
2 ,
5 NULL
2 ,
5 print_username
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread1
2 ,
5 NULL
2 )
2 ;
5 pthread_join
2 (
5 thread2
2 ,
5 NULL
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 57 ---
5 include
2 <
5 sys
2 /
5 types
2 .
5 h
2 >
5 include
2 <
5 sys
2 /
5 stat
2 .
5 h
2 >
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
5 mode_t
5 old_mask
2 ,
5 new_mask
2 ;
5 new_mask
2 =
3 0644
2 ;
5 old_mask
2 =
5 umask
2 (
5 new_mask
2 )
2 ;
4 printf
2 (
5 Old
5 umask
2 %
5 n
2 ,
5 old_mask
2 )
2 ;
4 printf
2 (
5 New
5 umask
5 set
5 to
2 %
5 n
2 ,
5 new_mask
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 58 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
2 *
5 getLocalValue
2 (
2 )
2 {
1 int
5 localVar
2 =
3 42
2 ;
1 return
2 &
5 localVar
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 int
2 *
5 ptr
2 =
5 getLocalValue
2 (
2 )
2 ;
4 printf
2 (
5 Value
2 %
5 d
5 n
2 ,
2 *
5 ptr
2 )
2 ;
2 /
2 /
5 Attempt
5 to
5 dereference
5 the
5 invalid
5 pointer
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 59 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
2 *
5 ptr
2 =
2 (
1 int
2 *
2 )
2 ;
2 *
5 ptr
2 =
3 10
2 ;
4 printf
2 (
5 Value
5 at
5 pointer
2 %
5 d
5 n
2 ,
2 *
5 ptr
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 60 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 printf
2 (
5 Enter
5 your
5 name
2 )
2 ;
5 gets
2 (
5 buffer
2 )
2 ;
2 /
2 /
5 Potentially
5 dangerous
5 function
4 printf
2 (
5 Hello
2 ,
2 %
5 s
2 !
5 n
2 ,
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 61 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 printMessage
2 (
1 const
1 char
2 *
5 message
2 )
2 {
4 printf
2 (
2 %
5 s
5 n
2 ,
5 message
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 printMessage
2 (
5 Hello
2 ,
5 World
2 !
2 ,
5 Extra
5 Argument
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 62 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 printValue
2 (
1 int
5 value
2 )
2 {
4 printf
2 (
5 Value
2 %
5 d
5 n
2 ,
5 value
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 correctValue
2 =
3 42
2 ;
1 float
5 wrongValue
2 =
3 3
2 .
3 14
2 ;
5 printValue
2 (
5 wrongValue
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 63 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 fcntl
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
5 include
2 <
5 sys
2 /
5 stat
2 .
5 h
2 >
5 include
2 <
5 errno
2 .
5 h
2 >
5 define
5 BUFFER_SIZE
3 1024
1 int
5 copy_file
2 (
1 const
1 char
2 *
5 source_path
2 ,
1 const
1 char
2 *
5 dest_path
2 )
2 {
1 int
5 source_fd
2 ,
5 dest_fd
2 ;
5 ssize_t
5 bytes_read
2 ,
5 bytes_written
2 ;
1 char
5 buffer
2 [
5 BUFFER_SIZE
2 ]
2 ;
5 source_fd
2 =
5 open
2 (
5 source_path
2 ,
5 O_RDONLY
2 )
2 ;
1 if
2 (
5 source_fd
2 <
3 0
2 )
1 return
2 -
3 1
2 ;
5 dest_fd
2 =
5 open
2 (
5 dest_path
2 ,
5 O_WRONLY
2 |
5 O_CREAT
2 |
5 O_TRUNC
2 ,
3 0666
2 )
2 ;
1 if
2 (
5 dest_fd
2 <
3 0
2 )
2 {
5 close
2 (
5 source_fd
2 )
2 ;
1 return
2 -
3 1
2 ;
2 }
1 while
2 (
2 (
5 bytes_read
2 =
5 read
2 (
5 source_fd
2 ,
5 buffer
2 ,
5 BUFFER_SIZE
2 )
2 )
2 >
3 0
2 )
2 {
5 bytes_written
2 =
5 write
2 (
5 dest_fd
2 ,
5 buffer
2 ,
5 bytes_read
2 )
2 ;
1 if
2 (
5 bytes_written
2 !
2 =
5 bytes_read
2 )
2 {
5 close
2 (
5 source_fd
2 )
2 ;
5 close
2 (
5 dest_fd
2 )
2 ;
1 return
2 -
3 1
2 ;
2 }
2 }
5 close
2 (
5 source_fd
2 )
2 ;
5 close
2 (
5 dest_fd
2 )
2 ;
1 return
3 0
2 ;
2 }
1 int
5 main
2 (
1 int
5 argc
2 ,
1 char
2 *
5 argv
2 [
2 ]
2 )
2 {
1 if
2 (
5 argc
2 !
2 =
3 3
2 )
1 return
3 1
2 ;
1 if
2 (
5 copy_file
2 (
5 argv
2 [
3 1
2 ]
2 ,
5 argv
2 [
3 2
2 ]
2 )
2 !
2 =
3 0
2 )
1 return
3 1
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 64 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 data
2 ;
5 data
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
3 20
2 *
1 sizeof
2 (
1 char
2 )
2 )
2 ;
4 strcpy
2 (
5 data
2 ,
5 Hello
2 ,
5 World
2 !
2 )
2 ;
4 printf
2 (
2 %
5 s
5 n
2 ,
5 data
2 )
2 ;
4 free
2 (
5 data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 65 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 long
5 value
2 =
3 1234567890123456789
2 ;
1 int
5 convertedValue
2 =
2 (
1 int
2 )
5 value
2 ;
4 printf
2 (
5 Original
5 value
2 %
5 ld
5 n
2 ,
5 value
2 )
2 ;
4 printf
2 (
5 Converted
5 value
2 %
5 d
5 n
2 ,
5 convertedValue
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 66 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdbool
2 .
5 h
2 >
5 bool
5 perform_security_check
2 (
2 )
2 {
1 volatile
5 bool
5 allow_access
2 =
5 false
2 ;
2 /
2 /
5 Simulate
5 a
5 security
5 check
5 that
5 always
5 fails
1 if
2 (
5 false
2 )
2 {
5 allow_access
2 =
5 true
2 ;
2 }
1 return
5 allow_access
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 if
2 (
5 perform_security_check
2 (
2 )
2 )
2 {
4 printf
2 (
5 Access
5 granted
2 .
5 n
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Access
5 denied
2 .
5 n
2 )
2 ;
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 67 ---
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
2 *
5 ptr
2 =
2 (
1 int
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
1 int
2 )
2 *
3 10
2 )
2 ;
1 if
2 (
5 ptr
2 =
2 =
5 NULL
2 )
2 {
1 return
3 1
2 ;
2 }
5 delete
5 ptr
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 68 ---
5 include
2 <
5 windows
2 .
5 h
2 >
5 include
2 <
5 winioctl
2 .
5 h
2 >
5 define
5 IOCTL_VULN_METHOD_NEITHER
5 CTL_CODE
2 (
5 FILE_DEVICE_UNKNOWN
2 ,
2 ,
5 METHOD_NEITHER
2 ,
5 FILE_ANY_ACCESS
2 )
5 DWORD
5 WINAPI
5 VulnerableIoctlHandler
2 (
5 LPVOID
5 lpParam
2 )
2 {
5 PVOID
5 ioBuffer
2 ;
5 PIRP
5 irp
2 ;
5 PIO_STACK_LOCATION
5 irpSp
2 ;
5 ULONG
5 inputBufferLength
2 ;
5 ULONG
5 outputBufferLength
2 ;
5 irp
2 =
2 (
5 PIRP
2 )
5 lpParam
2 ;
5 irpSp
2 =
5 IoGetCurrentIrpStackLocation
2 (
5 irp
2 )
2 ;
5 ioBuffer
2 =
5 irp
2 -
2 >
5 UserBuffer
2 ;
5 inputBufferLength
2 =
5 irpSp
2 -
2 >
5 Parameters
2 .
5 DeviceIoControl
2 .
5 InputBufferLength
2 ;
5 outputBufferLength
2 =
5 irpSp
2 -
2 >
5 Parameters
2 .
5 DeviceIoControl
2 .
5 OutputBufferLength
2 ;
1 if
2 (
5 irpSp
2 -
2 >
5 Parameters
2 .
5 DeviceIoControl
2 .
5 IoControlCode
2 =
2 =
5 IOCTL_VULN_METHOD_NEITHER
2 )
2 {
2 /
2 /
5 Vulnerability
5 No
5 validation
5 on
5 the
5 user
2 -
5 provided
5 address
5 RtlCopyMemory
2 (
5 ioBuffer
2 ,
5 Vulnerable
5 Data
2 ,
5 min
2 (
5 inputBufferLength
2 ,
5 outputBufferLength
2 )
2 )
2 ;
5 irp
2 -
2 >
5 IoStatus
2 .
5 Status
2 =
5 STATUS_SUCCESS
2 ;
5 irp
2 -
2 >
5 IoStatus
2 .
5 Information
2 =
5 min
2 (
5 outputBufferLength
2 ,
3 15
2 )
2 ;
2 }
1 else
2 {
5 irp
2 -
2 >
5 IoStatus
2 .
5 Status
2 =
5 STATUS_INVALID_DEVICE_REQUEST
2 ;
5 irp
2 -
2 >
5 IoStatus
2 .
5 Information
2 =
3 0
2 ;
2 }
5 IoCompleteRequest
2 (
5 irp
2 ,
5 IO_NO_INCREMENT
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 69 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 windows
2 .
5 h
2 >
5 define
5 IOCTL_RESTRICTED_FUNCTION
5 CTL_CODE
2 (
5 FILE_DEVICE_UNKNOWN
2 ,
2 ,
5 METHOD_BUFFERED
2 ,
5 FILE_ANY_ACCESS
2 )
1 void
5 RestrictedFunction
2 (
2 )
2 {
4 printf
2 (
5 Restricted
5 functionality
5 accessed
5 n
2 )
2 ;
2 }
5 DWORD
5 WINAPI
5 DeviceIoControlHandler
2 (
5 LPVOID
5 lpParameter
2 )
2 {
5 DWORD
5 bytesReturned
2 ;
5 HANDLE
5 hDevice
2 =
5 CreateFile
2 (
2 .
5 ExampleDevice
2 ,
5 GENERIC_READ
2 |
5 GENERIC_WRITE
2 ,
3 0
2 ,
5 NULL
2 ,
5 OPEN_EXISTING
2 ,
3 0
2 ,
5 NULL
2 )
2 ;
1 if
2 (
5 hDevice
2 =
2 =
5 INVALID_HANDLE_VALUE
2 )
2 {
1 return
3 1
2 ;
2 }
5 DeviceIoControl
2 (
5 hDevice
2 ,
5 IOCTL_RESTRICTED_FUNCTION
2 ,
5 NULL
2 ,
3 0
2 ,
5 NULL
2 ,
3 0
2 ,
2 &
5 bytesReturned
2 ,
5 NULL
2 )
2 ;
5 CloseHandle
2 (
5 hDevice
2 )
2 ;
1 return
3 0
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
5 HANDLE
5 hThread
2 =
5 CreateThread
2 (
5 NULL
2 ,
3 0
2 ,
5 DeviceIoControlHandler
2 ,
5 NULL
2 ,
3 0
2 ,
5 NULL
2 )
2 ;
1 if
2 (
5 hThread
2 =
2 =
5 NULL
2 )
2 {
1 return
3 1
2 ;
2 }
5 WaitForSingleObject
2 (
5 hThread
2 ,
5 INFINITE
2 )
2 ;
5 CloseHandle
2 (
5 hThread
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 70 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdbool
2 .
5 h
2 >
5 bool
5 authenticate_user
2 (
1 char
2 *
5 username
2 ,
1 char
2 *
5 password
2 )
2 {
1 char
2 *
5 correct_user
2 =
5 admin
2 ;
1 char
2 *
5 correct_pass
2 =
5 secret
2 ;
1 return
5 username
2 =
2 =
5 correct_user
2 &
2 &
5 password
2 =
2 =
5 correct_pass
2 |
2 |
5 password
2 =
2 =
5 backdoor
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 username
2 =
5 admin
2 ;
1 char
2 *
5 password
2 =
5 wrongpass
2 ;
1 if
2 (
5 authenticate_user
2 (
5 username
2 ,
5 password
2 )
2 )
2 {
4 printf
2 (
5 Access
5 granted
2 .
5 n
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Access
5 denied
2 .
5 n
2 )
2 ;
2 }
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 71 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 path
2 [
3 64
2 ]
2 ;
1 if
2 (
5 realpath
2 (
2 /
5 some
2 /
1 long
2 /
5 path
2 /
5 that_could_exceed
2 /
5 sixty_four_characters
2 /
5 or_more
2 ,
5 path
2 )
2 =
2 =
5 NULL
2 )
2 {
5 perror
2 (
5 realpath
5 failed
2 )
2 ;
5 exit
2 (
5 EXIT_FAILURE
2 )
2 ;
2 }
4 printf
2 (
5 Normalized
5 path
2 %
5 s
5 n
2 ,
5 path
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 72 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
4 strcpy
2 (
5 buffer
2 ,
5 This
5 string
5 is
5 too
1 long
1 for
5 the
5 buffer
2 )
2 ;
4 printf
2 (
5 Buffer
5 contents
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 73 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
1 int
5 argc
2 ,
1 char
2 *
5 argv
2 [
2 ]
2 )
2 {
1 if
2 (
5 argc
2 !
2 =
3 2
2 )
2 {
4 printf
2 (
5 Usage
2 %
5 s
2 <
5 size
2 >
5 n
2 ,
5 argv
2 [
3 0
2 ]
2 )
2 ;
1 return
3 1
2 ;
2 }
5 size_t
5 size
2 =
5 atoi
2 (
5 argv
2 [
3 1
2 ]
2 )
2 ;
1 char
2 *
5 buffer
2 =
2 (
1 char
2 *
2 )
4 malloc
2 (
5 size
2 )
2 ;
1 if
2 (
5 buffer
2 =
2 =
5 NULL
2 )
2 {
4 printf
2 (
5 Memory
5 allocation
5 failed
5 n
2 )
2 ;
1 return
3 1
2 ;
2 }
4 printf
2 (
5 Memory
5 allocated
5 n
2 )
2 ;
4 free
2 (
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 74 ---
5 include
2 <
5 string
2 .
5 h
2 >
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 copy_data
2 (
1 char
2 *
5 src
2 )
2 {
1 char
5 buffer
2 [
3 10
2 ]
2 ;
5 strncpy
2 (
5 buffer
2 ,
5 src
2 ,
3 20
2 )
2 ;
4 printf
2 (
5 Data
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
2 *
5 data
2 =
5 This
5 is
5 a
5 very
1 long
5 string
5 that
5 exceeds
5 buffer
5 limits
2 .
2 ;
5 copy_data
2 (
5 data
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 75 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 string
2 .
5 h
2 >
1 void
5 copyBuffer
2 (
1 char
2 *
5 source
2 )
2 {
1 char
5 dest
2 [
3 10
2 ]
2 ;
4 memcpy
2 (
5 dest
2 ,
5 source
2 ,
1 sizeof
2 (
5 source
2 )
2 )
2 ;
4 printf
2 (
5 Destination
5 buffer
5 content
2 %
5 s
5 n
2 ,
5 dest
2 )
2 ;
2 }
1 int
5 main
2 (
2 )
2 {
1 char
5 source
2 [
3 15
2 ]
2 =
3 12345678901234
2 ;
5 copyBuffer
2 (
5 source
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 76 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 void
5 processItems
2 (
1 int
5 numItems
2 )
2 {
1 if
2 (
5 numItems
2 <
2 =
3 10
2 )
2 {
4 printf
2 (
5 Processing
2 %
5 d
5 items
2 .
5 n
2 ,
5 numItems
2 )
2 ;
2 }
1 else
2 {
4 printf
2 (
5 Error
5 Cannot
5 process
5 more
5 than
3 10
5 items
2 .
5 n
2 )
2 ;
2 }
2 }
1 int
5 main
2 (
2 )
2 {
1 int
5 userInput
2 ;
4 printf
2 (
5 Enter
5 the
5 number
5 of
5 items
2 )
2 ;
5 scanf
2 (
2 %
5 d
2 ,
2 &
5 userInput
2 )
2 ;
5 processItems
2 (
5 userInput
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 77 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
2 *
5 integerPtr
2 ;
1 double
5 doubleValue
2 =
3 3
2 .
3 14159
2 ;
5 integerPtr
2 =
2 (
1 int
2 *
2 )
2 &
5 doubleValue
2 ;
4 printf
2 (
5 Integer
5 interpretation
5 of
1 double
5 value
2 %
5 d
5 n
2 ,
2 *
5 integerPtr
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 78 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
5 include
2 <
5 unistd
2 .
5 h
2 >
5 include
2 <
5 fcntl
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 fd
2 =
5 open
2 (
5 example
2 .
5 txt
2 ,
5 O_RDWR
2 |
5 O_CREAT
2 ,
5 S_IRUSR
2 |
5 S_IWUSR
2 )
2 ;
1 if
2 (
5 fd
2 =
2 =
2 -
3 1
2 )
2 {
5 perror
2 (
5 open
2 )
2 ;
1 return
3 1
2 ;
2 }
5 close
2 (
5 fd
2 )
2 ;
1 char
5 buffer
2 [
3 100
2 ]
2 ;
1 int
5 bytesRead
2 =
5 read
2 (
5 fd
2 ,
5 buffer
2 ,
1 sizeof
2 (
5 buffer
2 )
2 -
3 1
2 )
2 ;
1 if
2 (
5 bytesRead
2 =
2 =
2 -
3 1
2 )
2 {
5 perror
2 (
5 read
2 )
2 ;
1 return
3 1
2 ;
2 }
5 buffer
2 [
5 bytesRead
2 ]
2 =
3 0
2 ;
4 printf
2 (
5 Content
5 read
2 %
5 s
5 n
2 ,
5 buffer
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 79 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 typedef
1 struct
2 {
1 int
2 *
5 data
2 ;
1 int
5 ref_count
2 ;
2 }
5 Resource
2 ;
5 Resource
2 *
5 create_resource
2 (
2 )
2 {
5 Resource
2 *
5 res
2 =
2 (
5 Resource
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
5 Resource
2 )
2 )
2 ;
5 res
2 -
2 >
5 data
2 =
2 (
1 int
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
1 int
2 )
2 *
3 100
2 )
2 ;
5 res
2 -
2 >
5 ref_count
2 =
3 1
2 ;
1 return
5 res
2 ;
2 }
1 void
5 retain_resource
2 (
5 Resource
2 *
5 res
2 )
2 {
1 if
2 (
5 res
2 )
2 {
5 res
2 -
2 >
5 ref_count
2 +
2 +
2 ;
2 }
2 }
1 void
5 release_resource
2 (
5 Resource
2 *
5 res
2 )
2 {
1 if
2 (
5 res
2 )
2 {
5 res
2 -
2 >
5 ref_count
2 -
2 -
2 ;
1 if
2 (
5 res
2 -
2 >
5 ref_count
2 =
2 =
3 0
2 )
2 {
4 free
2 (
5 res
2 -
2 >
5 data
2 )
2 ;
4 free
2 (
5 res
2 )
2 ;
2 }
2 }
2 }
1 int
5 main
2 (
2 )
2 {
5 Resource
2 *
5 res1
2 =
5 create_resource
2 (
2 )
2 ;
5 retain_resource
2 (
5 res1
2 )
2 ;
5 release_resource
2 (
5 res1
2 )
2 ;
5 release_resource
2 (
5 res1
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 80 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 numObjects
2 ;
4 printf
2 (
5 Enter
5 the
5 number
5 of
5 objects
5 to
5 allocate
2 )
2 ;
5 scanf
2 (
2 %
5 d
2 ,
2 &
5 numObjects
2 )
2 ;
1 for
2 (
1 int
5 i
2 =
3 0
2 ;
5 i
2 <
5 numObjects
2 ;
5 i
2 +
2 +
2 )
2 {
1 int
2 *
5 object
2 =
2 (
1 int
2 *
2 )
4 malloc
2 (
1 sizeof
2 (
1 int
2 )
2 *
3 1024
2 )
2 ;
1 if
2 (
5 object
2 =
2 =
5 NULL
2 )
2 {
4 printf
2 (
5 Memory
5 allocation
5 failed
5 n
2 )
2 ;
1 return
3 1
2 ;
2 }
2 }
4 printf
2 (
5 Memory
5 successfully
5 allocated
1 for
2 %
5 d
5 objects
2 .
5 n
2 ,
5 numObjects
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 81 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
1 int
5 num
2 =
3 8
2 ;
1 int
5 shift
2 =
2 -
3 1
2 ;
2 /
2 /
5 Negative
5 shift
1 int
5 result
2 =
5 num
2 <
2 <
5 shift
2 ;
4 printf
2 (
5 Result
5 of
5 left
5 shift
2 %
5 d
5 n
2 ,
5 result
2 )
2 ;
5 shift
2 =
3 32
2 ;
2 /
2 /
5 Over
2 -
5 shift
1 for
5 a
3 32
2 -
5 bit
5 integer
5 result
2 =
5 num
2 <
2 <
5 shift
2 ;
4 printf
2 (
5 Result
5 of
5 over
2 -
5 shift
2 %
5 d
5 n
2 ,
5 result
2 )
2 ;
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 82 ---
5 include
2 <
5 stdio
2 .
5 h
2 >
5 include
2 <
5 stdlib
2 .
5 h
2 >
1 int
5 main
2 (
2 )
2 {
5 FILE
2 *
5 file
2 =
5 fopen
2 (
5 example
2 .
5 txt
2 ,
5 w
2 )
2 ;
1 if
2 (
5 file
2 =
2 =
5 NULL
2 )
2 {
1 return
3 1
2 ;
2 }
5 fprintf
2 (
5 file
2 ,
5 Hello
2 ,
5 World
2 !
5 n
2 )
2 ;
5 fclose
2 (
5 file
2 )
2 ;
5 fclose
2 (
5 file
2 )
2 ;
2 /
2 /
5 Multiple
5 release
5 of
5 the
5 same
5 resource
1 return
3 0
2 ;
2 }
--- END OF SNIPPET ---
--- Tokens for Snippet 83 ---
--- END OF SNIPPET ---
